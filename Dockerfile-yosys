############################################
# 1) Builder stage: build yosys two ways   #
############################################
FROM ubuntu:22.04 AS builder

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && \
    apt-get install -y build-essential clang lld bison flex cmake \
    libreadline-dev gawk tcl-dev libffi-dev git \
    graphviz xdot pkg-config python3 libboost-system-dev \
    libboost-python-dev libboost-filesystem-dev zlib1g-dev \
    ccache && \
    apt-get autoclean && apt-get clean && apt-get -y autoremove && \
    rm -rf /var/lib/apt/lists/*

ENV CCACHE_DIR=/ccache
ENV CCACHE_MAXSIZE=5G
RUN mkdir -p $CCACHE_DIR && chmod 777 $CCACHE_DIR

ENV CC="ccache gcc"
ENV CXX="ccache g++"
RUN mkdir -p /src

# --------- Build mimalloc ----------
WORKDIR /src
RUN git clone --depth 1 --branch v3.1.5 --single-branch https://github.com/microsoft/mimalloc.git
WORKDIR /src/mimalloc
RUN mkdir -p out/release
WORKDIR /src/mimalloc/out/release
RUN cmake ../.. -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DMI_BUILD_OBJECT=ON -DMI_OVERRIDE=ON
RUN make -j$(nproc)

# --------- Clone Yosys Source (only once) ----------
WORKDIR /src
RUN git clone --depth 1 --branch v0.54 --single-branch https://github.com/YosysHQ/yosys.git yosys-src

# Copy any patches/scripts
COPY patch-yosys-env.sh /src/yosys-src/patch-yosys-env.sh
RUN chmod +x /src/yosys-src/patch-yosys-env.sh

# --------- 1. Build "normal" yosys (no mimalloc) ----------
WORKDIR /src
RUN cp -r yosys-src yosys-nomimalloc

WORKDIR /src/yosys-nomimalloc
RUN git submodule update --init --recursive

RUN ./patch-yosys-env.sh
RUN grep -A 10 -B 10 -n 'const char\* env_datdir = getenv("YOSYS_DATDIR");' kernel/yosys.cc || (echo "Required line not found" && exit 1)

# Clean Makefile changes (ensure mimalloc isn't linked in any way)
RUN git checkout -- Makefile || true

RUN make config-gcc-static
RUN make -j$(nproc)
RUN mkdir -p /yosys-install-nomimalloc
RUN make PREFIX=/yosys-install-nomimalloc install

RUN cd / && tar -czf yosys-install-nomimalloc.tar.gz yosys-install-nomimalloc

# --------- 2. Build yosys *with* mimalloc ----------
WORKDIR /src
RUN cp -r yosys-src yosys-mimalloc

WORKDIR /src/yosys-mimalloc
RUN git submodule update --init --recursive

RUN ./patch-yosys-env.sh
RUN grep -A 10 -B 10 -n 'const char\* env_datdir = getenv("YOSYS_DATDIR");' kernel/yosys.cc || (echo "Required line not found" && exit 1)

# Patch Makefile to link mimalloc (as before)
RUN cp /src/mimalloc/out/release/mimalloc.o /src/yosys-mimalloc/libs/mimalloc.o
RUN sed -i \
    '/^\s*\$(PROGRAM_PREFIX)yosys\$(EXE): \$(OBJS)/{n;s/\$(CXX) -o \$(PROGRAM_PREFIX)yosys\$(EXE) \(.*\) \$(OBJS)/$(CXX) -o $(PROGRAM_PREFIX)yosys$(EXE) \1 libs\/mimalloc.o $(OBJS)/}' \
    Makefile

RUN sed -i '/^\$(PROG): \$(OBJ)/{n;n;s/\$(LD) -o \$@ \$\^ $(LDFLAGS) $(LIBS)/$(LD) -o \$@ ..\/libs\/mimalloc.o \$\^ $(LDFLAGS) $(LIBS)/}' abc/Makefile

RUN make config-gcc-static
RUN make -j$(nproc)
RUN mkdir -p /yosys-install-mimalloc
RUN make PREFIX=/yosys-install-mimalloc install

RUN cd / && tar -czf yosys-install-mimalloc.tar.gz yosys-install-mimalloc

############################################
# 2) Final stage: copy out the tarballs    #
############################################
FROM ubuntu:22.04 AS final
COPY --from=builder /yosys-install-nomimalloc.tar.gz /yosys-install-nomimalloc.tar.gz
COPY --from=builder /yosys-install-mimalloc.tar.gz /yosys-install-mimalloc.tar.gz

# (Optional) show contents for debug
RUN tar -tzf /yosys-install-nomimalloc.tar.gz && tar -tzf /yosys-install-mimalloc.tar.gz